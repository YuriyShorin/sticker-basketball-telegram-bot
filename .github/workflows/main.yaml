name: StickerBasketball

on:
  push:
    branches: [ "master" ]
  pull_request:
      branches: [ "master" ]

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Lint Code Base
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          VALIDATE_JAVA: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build Gradle
        run: gradle build -x test

      - name: Artifact archive
        run: zip -r artifact.zip build/libs/StickerBasketball-0.0.1-SNAPSHOT.jar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: StickerBasketball
          path: artifact.zip

  send_telegram_message:
    name: Send telegram message
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: StickerBasketball
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_ID }}
          token: ${{ secrets.SENDING_BOT_TOKEN }}
          document: StickerBasketball
          message: |
            Artifact uploaded
          

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bot:latest

      - name: Deploy to Self-Hosted Agent
        run: |
          docker stop sticker-basketball || true && docker rm sticker-basketball || true
          docker pull ${{ secrets.DOCKER_USERNAME }}/bot:latest
          docker run -d --name sticker-basketball \
          -e "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" \
          -e "BOT_NAME=${{ secrets.BOT_NAME }}" \
          ${{ secrets.DOCKER_USERNAME }}/bot:latest